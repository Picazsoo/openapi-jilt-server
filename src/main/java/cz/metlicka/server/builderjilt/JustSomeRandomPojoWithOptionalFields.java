package cz.metlicka.server.builderjilt;

import lombok.RequiredArgsConstructor;
import org.jilt.Builder;
import org.jilt.BuilderStyle;
import org.jilt.Opt;

import java.time.LocalDateTime;

@Builder(style = BuilderStyle.TYPE_SAFE_UNGROUPED_OPTIONALS)
@RequiredArgsConstructor
public class JustSomeRandomPojoWithOptionalFields {

    private final String mandatoryString1;

    @Opt
    private final String optionalString2;

    private final String mandatoryString3;

    private final int mandatoryInt4;

    @Opt
    private final long optionalLong5;

    private final LocalDateTime mandatoryLocalDateTime6;

    private JustSomeRandomPojoWithOptionalFields exampleOfJiltBuilderOptIncluded() {
        //1) This is an example of a type-safe builder generated by Jilt. Notice that you cannot
        //build the pojo without using all the non-@Opt builder steps.
        return JustSomeRandomPojoWithOptionalFieldsBuilder
                .justSomeRandomPojoWithOptionalFields()
                .mandatoryString1("mandatory1")
                .optionalString2("optional2")
                .mandatoryString3("mandatory3")
                .mandatoryInt4(123)
                .optionalLong5(123L)
                .mandatoryLocalDateTime6(LocalDateTime.now())
                .build();
    }

    private JustSomeRandomPojoWithOptionalFields exampleOfJiltBuilderOptSkipped() {
        //2) However you can skip the @Opt fields in the builder.
        return JustSomeRandomPojoWithOptionalFieldsBuilder
                .justSomeRandomPojoWithOptionalFields()
                .mandatoryString1("mandatory1")
                //.optionalString2("optional2")
                .mandatoryString3("mandatory3")
                .mandatoryInt4(123)
                //.optionalLong5(123L)
                .mandatoryLocalDateTime6(LocalDateTime.now())
                .build();
    }
}
